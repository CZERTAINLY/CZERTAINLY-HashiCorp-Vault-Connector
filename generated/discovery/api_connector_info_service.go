/*
 * CZERTAINLY Discovery Provider API
 *
 * REST API for implementations of custom Discovery Provider
 *
 * API version: 2.11.0
 * Contact: getinfo@czertainly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package discovery

import (
	"CZERTAINLY-HashiCorp-Vault-Connector/internal/utils"
	"context"
)

// ConnectorInfoAPIService is a service that implements the logic for the ConnectorInfoAPIServicer
// This service should implement the business logic for every endpoint for the ConnectorInfoAPI API.
// Include any external packages or services that will be required by this service.
type ConnectorInfoAPIService struct {
    endpoints[] EndpointDto
}

// NewConnectorInfoAPIService creates a default api service
func NewConnectorInfoAPIService() ConnectorInfoAPIServicer {
	return &ConnectorInfoAPIService{}
}

// SetEndpoints sets the endpoints for the ConnectorInfoAPIService
func (s *ConnectorInfoAPIService) SetEndpoints(endpoints []EndpointDto) {
	s.endpoints = endpoints
}


// ListSupportedFunctions - List supported functions of the connector
func (s *ConnectorInfoAPIService) ListSupportedFunctions(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListSupportedFunctions with the required logic for this service method.
	// Add api_connector_info_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, ErrorMessageDto{}) or use other options such as http.Ok ...
	// return Response(400, ErrorMessageDto{}), nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	infoResponses := []InfoResponse{
		{
			FunctionGroupCode: "credentialProvider",
			Kinds:             []string{"hashicorp"},
			EndPoints:         s.endpoints,
		},
		{
			// Fill with your data
		},
		// Add more InfoResponse instances if needed
	}

	return Response(200, infoResponses), nil

	// TODO: Uncomment the next line to return response Response(404, ErrorMessageDto{}) or use other options such as http.Ok ...
	// return Response(404, ErrorMessageDto{}), nil
}
