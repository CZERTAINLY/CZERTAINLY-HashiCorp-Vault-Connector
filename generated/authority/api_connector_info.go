/*
 * CZERTAINLY Authority Provider v2 API
 *
 * REST API for implementations of custom v2 Authority Provider
 *
 * API version: 2.11.0
 * Contact: getinfo@czertainly.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package authority

import (
	"net/http"
	"strings"

)

// ConnectorInfoAPIController binds http requests to an api service and writes the service results to the http response
type ConnectorInfoAPIController struct {
	service      ConnectorInfoAPIServicer
	errorHandler ErrorHandler
}

// ConnectorInfoAPIOption for how the controller is set up.
type ConnectorInfoAPIOption func(*ConnectorInfoAPIController)

// WithConnectorInfoAPIErrorHandler inject ErrorHandler into controller
func WithConnectorInfoAPIErrorHandler(h ErrorHandler) ConnectorInfoAPIOption {
	return func(c *ConnectorInfoAPIController) {
		c.errorHandler = h
	}
}

// NewConnectorInfoAPIController creates a default api controller
func NewConnectorInfoAPIController(s ConnectorInfoAPIServicer, opts ...ConnectorInfoAPIOption) Router {
	controller := &ConnectorInfoAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the ConnectorInfoAPIController
func (c *ConnectorInfoAPIController) Routes() Routes {
	return Routes{
		"ListSupportedFunctions": Route{
			strings.ToUpper("Get"),
			"/v1",
			c.ListSupportedFunctions,
		},
	}
}

// ListSupportedFunctions - List supported functions of the connector
func (c *ConnectorInfoAPIController) ListSupportedFunctions(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.ListSupportedFunctions(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
